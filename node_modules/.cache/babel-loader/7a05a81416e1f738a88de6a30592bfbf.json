{"ast":null,"code":"import _objectSpread from \"/Users/bogutskii/Projects/pixel-draw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/bogutskii/Projects/pixel-draw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bogutskii/Projects/pixel-draw/src/Components/Field.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Field.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Field = () => {\n  _s();\n\n  const _useState = useState(new Array(100).fill({\n    color: \"white\"\n  })),\n        _useState2 = _slicedToArray(_useState, 2),\n        block = _useState2[0],\n        setBlock = _useState2[1];\n\n  const _useState3 = useState(\"black\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentColor = _useState4[0],\n        setCurrentColor = _useState4[1];\n\n  const _useState5 = useState([\"yellow\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        colorHistory = _useState6[0],\n        setColorHistory = _useState6[1];\n\n  const changePixelColor = ind => {\n    if (!colorHistory.includes(currentColor)) {\n      setColorHistory([...colorHistory, currentColor]);\n    }\n\n    console.log(colorHistory);\n    setBlock([...block].map((el, i) => i === ind ? _objectSpread(_objectSpread({}, el), {}, {\n      color: currentColor\n    }) : el));\n  };\n\n  const changeColor = e => {\n    setCurrentColor(e);\n  };\n\n  const saveToHistory = color => {\n    setCurrentColor(color);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colorhistory\",\n      children: colorHistory.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pixelHistory\",\n        style: {\n          background: el\n        },\n        onClick: () => saveToHistory(el),\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      value: currentColor,\n      onChange: e => changeColor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: block.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pixel\",\n        style: {\n          background: el.color\n        },\n        onClick: () => changePixelColor(i),\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Field, \"glHA6VlPtGKMUx2hoeprR0fCg08=\");\n\n_c = Field;\nexport default Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/Users/bogutskii/Projects/pixel-draw/src/Components/Field.js"],"names":["React","useState","Field","Array","fill","color","block","setBlock","currentColor","setCurrentColor","colorHistory","setColorHistory","changePixelColor","ind","includes","console","log","map","el","i","changeColor","e","saveToHistory","background","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA,oBACQD,QAAQ,CAAC,IAAIE,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB,CAAD,CADhB;AAAA;AAAA,QACXC,KADW;AAAA,QACJC,QADI;;AAAA,qBAEsBN,QAAQ,CAAC,OAAD,CAF9B;AAAA;AAAA,QAEXO,YAFW;AAAA,QAEGC,eAFH;;AAAA,qBAGsBR,QAAQ,CAAC,CAAC,QAAD,CAAD,CAH9B;AAAA;AAAA,QAGXS,YAHW;AAAA,QAGGC,eAHH;;AAIlB,QAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAChC,QAAI,CAACH,YAAY,CAACI,QAAb,CAAsBN,YAAtB,CAAL,EAA0C;AACxCG,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBF,YAAlB,CAAD,CAAf;AACD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACAH,IAAAA,QAAQ,CACN,CAAC,GAAGD,KAAJ,EAAWW,GAAX,CAAe,CAACC,EAAD,EAAKC,CAAL,KACbA,CAAC,KAAKN,GAAN,mCAAiBK,EAAjB;AAAqBb,MAAAA,KAAK,EAAEG;AAA5B,SAA6CU,EAD/C,CADM,CAAR;AAKD,GAVD;;AAWA,QAAME,WAAW,GAAIC,CAAD,IAAO;AACzBZ,IAAAA,eAAe,CAACY,CAAD,CAAf;AACD,GAFD;;AAGA,QAAMC,aAAa,GAAIjB,KAAD,IAAW;AAC/BI,IAAAA,eAAe,CAACJ,KAAD,CAAf;AACD,GAFD;;AAGA,sBACE;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGK,YAAY,CAACO,GAAb,CAAiB,CAACC,EAAD,EAAKC,CAAL,kBAChB;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAE;AAAEI,UAAAA,UAAU,EAAEL;AAAd,SAFT;AAGE,QAAA,OAAO,EAAE,MAAMI,aAAa,CAACJ,EAAD,CAH9B;AAAA,kBAKG;AALH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAEV,YAFT;AAGE,MAAA,QAAQ,EAAGa,CAAD,IAAOD,WAAW,CAACC,CAAC,CAACG,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,YAbF,eAmBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGnB,KAAK,CAACW,GAAN,CAAU,CAACC,EAAD,EAAKC,CAAL,kBACT;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,KAAK,EAAE;AAAEI,UAAAA,UAAU,EAAEL,EAAE,CAACb;AAAjB,SAFT;AAGE,QAAA,OAAO,EAAE,MAAMO,gBAAgB,CAACO,CAAD,CAHjC;AAAA,kBAKGA;AALH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AAiCD,CAtDD;;GAAMjB,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Field.css\";\nconst Field = () => {\n  const [block, setBlock] = useState(new Array(100).fill({ color: \"white\" }));\n  const [currentColor, setCurrentColor] = useState(\"black\");\n  const [colorHistory, setColorHistory] = useState([\"yellow\"]);\n  const changePixelColor = (ind) => {\n    if (!colorHistory.includes(currentColor)) {\n      setColorHistory([...colorHistory, currentColor]);\n    }\n    console.log(colorHistory);\n    setBlock(\n      [...block].map((el, i) =>\n        i === ind ? { ...el, color: currentColor } : el\n      )\n    );\n  };\n  const changeColor = (e) => {\n    setCurrentColor(e);\n  };\n  const saveToHistory = (color) => {\n    setCurrentColor(color);\n  };\n  return (\n    <>\n      {/*{colorHistory.map((el,i) => <div  className='color-history' style={{background: el}}>.</div>)} */}\n      <div className=\"colorhistory\">\n        {colorHistory.map((el, i) => (\n          <div\n            className=\"pixelHistory\"\n            style={{ background: el }}\n            onClick={() => saveToHistory(el)}\n          >\n            {\" \"}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"color\"\n        value={currentColor}\n        onChange={(e) => changeColor(e.target.value)}\n      />\n\n      <div className=\"grid\">\n        {block.map((el, i) => (\n          <div\n            className=\"pixel\"\n            style={{ background: el.color }}\n            onClick={() => changePixelColor(i)}\n          >\n            {i}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\nexport default Field;\n"]},"metadata":{},"sourceType":"module"}