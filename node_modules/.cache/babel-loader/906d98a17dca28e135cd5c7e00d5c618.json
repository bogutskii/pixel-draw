{"ast":null,"code":"import _objectSpread from \"/Users/bogutskii/Projects/pixel-draw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/bogutskii/Projects/pixel-draw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bogutskii/Projects/pixel-draw/src/Components/Field.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Field.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Field = () => {\n  _s();\n\n  const _useState = useState(new Array(100).fill({\n    color: \"white\"\n  })),\n        _useState2 = _slicedToArray(_useState, 2),\n        block = _useState2[0],\n        setBlock = _useState2[1];\n\n  const _useState3 = useState(\"black\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentColor = _useState4[0],\n        setCurrentColor = _useState4[1];\n\n  const _useState5 = useState([\"yellow\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        colorHistory = _useState6[0],\n        setColorHistory = _useState6[1];\n\n  const changePixelColor = ind => {\n    if (!colorHistory.includes(currentColor)) {\n      setColorHistory([...colorHistory, currentColor]);\n    }\n\n    console.log(colorHistory);\n    setBlock([...block].map((el, i) => i === ind ? _objectSpread(_objectSpread({}, el), {}, {\n      color: currentColor\n    }) : el));\n  };\n\n  const changeColor = e => {\n    setCurrentColor(e);\n  };\n\n  const saveToHistory = color => {\n    setCurrentColor(color);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colorhistory\",\n      children: colorHistory.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pixelHistory\",\n        style: {\n          background: el\n        },\n        onClick: () => saveToHistory(el),\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      value: currentColor,\n      onChange: e => changeColor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: block.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pixel\",\n        style: {\n          background: el.color\n        },\n        onClick: () => changePixelColor(i),\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Field, \"hOxecrwwuMhsZzayaGiHD8Wgw2g=\");\n\n_c = Field;\nexport default Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/Users/bogutskii/Projects/pixel-draw/src/Components/Field.js"],"names":["React","useState","Field","Array","fill","color","block","setBlock","currentColor","setCurrentColor","colorHistory","setColorHistory","changePixelColor","ind","includes","console","log","map","el","i","changeColor","e","saveToHistory","background","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA,oBACUD,QAAQ,CAAC,IAAIE,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB;AAACC,IAAAA,KAAK,EAAE;AAAR,GAApB,CAAD,CADlB;AAAA;AAAA,QACTC,KADS;AAAA,QACFC,QADE;;AAAA,qBAEwBN,QAAQ,CAAC,OAAD,CAFhC;AAAA;AAAA,QAETO,YAFS;AAAA,QAEKC,eAFL;;AAAA,qBAGwBR,QAAQ,CAAC,CAAC,QAAD,CAAD,CAHhC;AAAA;AAAA,QAGTS,YAHS;AAAA,QAGKC,eAHL;;AAIhB,QAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAC9B,QAAI,CAACH,YAAY,CAACI,QAAb,CAAsBN,YAAtB,CAAL,EAA0C;AACtCG,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBF,YAAlB,CAAD,CAAf;AACH;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACAH,IAAAA,QAAQ,CACJ,CAAC,GAAGD,KAAJ,EAAWW,GAAX,CAAe,CAACC,EAAD,EAAKC,CAAL,KACXA,CAAC,KAAKN,GAAN,mCAAgBK,EAAhB;AAAoBb,MAAAA,KAAK,EAAEG;AAA3B,SAA2CU,EAD/C,CADI,CAAR;AAKH,GAVD;;AAWA,QAAME,WAAW,GAAIC,CAAD,IAAO;AACvBZ,IAAAA,eAAe,CAACY,CAAD,CAAf;AACH,GAFD;;AAGA,QAAMC,aAAa,GAAIjB,KAAD,IAAW;AAC7BI,IAAAA,eAAe,CAACJ,KAAD,CAAf;AACH,GAFD;;AAGA,sBACI;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKK,YAAY,CAACO,GAAb,CAAiB,CAACC,EAAD,EAAKC,CAAL,kBACd;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,KAAK,EAAE;AAACI,UAAAA,UAAU,EAAEL;AAAb,SAFX;AAGI,QAAA,OAAO,EAAE,MAAMI,aAAa,CAACJ,EAAD,CAHhC;AAAA,kBAKK;AALL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAEV,YAFX;AAGI,MAAA,QAAQ,EAAGa,CAAD,IAAOD,WAAW,CAACC,CAAC,CAACG,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,YAbJ,eAmBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACKnB,KAAK,CAACW,GAAN,CAAU,CAACC,EAAD,EAAKC,CAAL,kBACP;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,KAAK,EAAE;AAACI,UAAAA,UAAU,EAAEL,EAAE,CAACb;AAAhB,SAFX;AAGI,QAAA,OAAO,EAAE,MAAMO,gBAAgB,CAACO,CAAD,CAHnC;AAAA,kBAKKA;AALL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA,kBADJ;AAiCH,CAtDD;;GAAMjB,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Field.css\";\n\nconst Field = () => {\n    const [block, setBlock] = useState(new Array(100).fill({color: \"white\"}));\n    const [currentColor, setCurrentColor] = useState(\"black\");\n    const [colorHistory, setColorHistory] = useState([\"yellow\"]);\n    const changePixelColor = (ind) => {\n        if (!colorHistory.includes(currentColor)) {\n            setColorHistory([...colorHistory, currentColor]);\n        }\n        console.log(colorHistory);\n        setBlock(\n            [...block].map((el, i) =>\n                i === ind ? {...el, color: currentColor} : el\n            )\n        );\n    };\n    const changeColor = (e) => {\n        setCurrentColor(e);\n    };\n    const saveToHistory = (color) => {\n        setCurrentColor(color);\n    };\n    return (\n        <>\n            {/*{colorHistory.map((el,i) => <div  className='color-history' style={{background: el}}>.</div>)} */}\n            <div className=\"colorhistory\">\n                {colorHistory.map((el, i) => (\n                    <div\n                        className=\"pixelHistory\"\n                        style={{background: el}}\n                        onClick={() => saveToHistory(el)}\n                    >\n                        {\" \"}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"color\"\n                value={currentColor}\n                onChange={(e) => changeColor(e.target.value)}\n            />\n\n            <div className=\"grid\">\n                {block.map((el, i) => (\n                    <div\n                        className=\"pixel\"\n                        style={{background: el.color}}\n                        onClick={() => changePixelColor(i)}\n                    >\n                        {i}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\nexport default Field;\n"]},"metadata":{},"sourceType":"module"}